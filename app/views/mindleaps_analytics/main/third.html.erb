<head>
  <script src="https://code.highcharts.com/highcharts.js"></script>
</head>

<%- content_for :header_content do %>
  <%= render partial: '/shared/header_content', locals: { title: 'Group Analytics' } %>
<%- end %>

<%= render 'mindleaps_analytics/shared/tabs' %>

<%= form_tag do %>
    <table>
      <tr>
        <td style="padding-right: 20px;">
          <%= label_tag :organization_label, "Organization" %>
          <%= select_tag :organization_select, options_from_collection_for_select(@organizations, :id, :organization_name, @selected_organization_id), :prompt => 'All' %>
        </td>
        <td style="padding-right: 20px;">
          <%= label_tag :chapter_label, "Chapter" %>
          <%= select_tag :chapter_select, options_from_collection_for_select(@chapters, :id, :chapter_name, @selected_chapter_id), :prompt => 'All' %>
        </td>
        <td style="padding-right: 20px;">
          <%= submit_tag "Submit" %>
        </td>
      </tr>
    </table>
<% end %>

<table id="trellis" style="width: 100%; table-layout: fixed;">
  <% rows = (@count + 1)/2 %>
  <% rows.times do %>
      <tr>
        <td></td>
        <td></td>
      </tr>
  <% end %>
</table>

<script>
  //0.3.5
  function pegasus(a,b,c){return c=new XMLHttpRequest,c.open("GET",a),a=[],pegasus.timeout&&(c.timeout=pegasus.timeout),c.ontimeout=function(a){b=a},c.onreadystatechange=c.then=function(d,e,f,g){if(d&&d.call&&(a=[,d,e]),b&&a[2]&&a[2](b,c),4==c.readyState&&(f=a[0|c.status/200])){try{g=JSON.parse(c.responseText)}catch(a){g=null}f(g,c)}},c.send(),c}

    $('#organization_select').change(function () {
        var selectedOrganization = $('#organization_select :selected').val();
        var selectedChapter = $('#chapter_select :selected').val();
        var selectedGroup = $('#group_select :selected').val();

      pegasus('<%=find_update_chapters_path%>?organization_id=' + selectedOrganization + '&chapter_id=' + selectedChapter + '&group_id=' + selectedGroup)
        .then(function (data) {
            var chapters = data.chapters;

            $('#chapter_select').empty();
            var opt = document.createElement('option');
            opt.text = 'All';
            $('#chapter_select').append(opt, null);

            for (i = 0; i < chapters.length; i++) {
              var chapter = chapters[i];

              var opt = document.createElement('option');
              opt.text = chapter.chapter_name;
              opt.value = chapter.id;

              $('#chapter_select').append(opt, null);
            }
            $('#chapter_select').select(0);
            $('#chapter_select').change();
          },function (data) {
          }
        );
    });

    $(function () {
        var charts = [],
            $containers = $('#trellis td'),
            datasets = <%= @series8.html_safe %>;

        $.each(datasets, function (i, dataset) {
            charts.push(new Highcharts.Chart({

                chart: {
                    renderTo: $containers[i],
                    type: 'scatter'
                },
                title: {
                    text: dataset.group
                },
                credits: {
                    enabled: false
                },
                tooltip: {
                    valueDecimals: 1
                },
                xAxis: {
                    title: {
                        text: '<%= t(:nr_of_lessons) %>'
                    }
                },
                yAxis: {
                    allowDecimals: false,
                    title: {
                        text: '<%= t(:performance)%>'
                    }
                },
                legend: {
                    enabled: false
                },
                plotOptions: {
                    series: {
                        marker: {
                            radius: 2
                        }
                    }
                },
                series: dataset.series

            }));
        });
    });
</script>
